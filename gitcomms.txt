# To push your changes

git add ./
git commit -m "message here"
git push



# To see updated changes
git pull


## What branch am I In?
git branch --show-current



## Essential Commands for Your Workflow

Here are the commands you'll need for working with your `main` and `development` branches.

### 1\. Initial Setup


2.  **Switch to the beta branch
    git switch beta

    *Now you are on the `development` branch, ready to work.*

-----

### 2\. Daily Development Work

You should spend most of your time on the `development` branch.

1.  **Make Changes:** Modify files, add new features, etc.
2.  **Stage and Commit:**
    ```bash
    git add ./
    git commit -m "Implement new feature X"
    ```
3.  **Push to GitHub:**
    The first time you push this new branch, you'll need to use the `-u` (or `--set-upstream`) flag to link your local branch to a remote branch on GitHub.
    ```bash
    git push -u origin beta
    # For subsequent pushes:
    # git push
    ```

-----

# Change back to main branch
    git switch main
    
# Merge `development` into `main`:
   
    git merge beta
    
# Push the updated `main` to GitHub:**
    git push origin main

-----


# Switch back to `development`:

    git switch development

# Merge `main` into `development`:**
    
    git merge main
    

-----